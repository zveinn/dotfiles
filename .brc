#!/bin/bash
#
# relavent folders (specific to zveinn)
# ~/.github-feed
# ~/.secrets

export PATH=$PATH:/usr/local/go/bin:~/go/bin
export PATH="$HOME/.local/bin:$PATH"
export GOPATH=~/go
export COLORTERM=truecolor


#bind '"\C-r":reverse-search-history'
 bind -x '"\C-r": __gistory'
# __gistory() {
#       local selected
#       selected=$(/home/sveinn/code/tools/gistory/gistory)
#       if [ -n "$selected" ]; then
#           READLINE_LINE="$selected"
#           READLINE_POINT=${#READLINE_LINE}
#       fi
# }
# 
__gistory() {
			history -w
      local selected
      # selected=$(gistory)
      selected=$(gistory)
      if [ -n "$selected" ]; then
          history -s "$selected"  # Add to history
          eval "$selected"         # Execute immediately
      fi
  }




source /home/sveinn/.secrets/secrets.sh

function get_command_number() {
	command_num=$(history | tail -n 1 | awk '{print $1}')
  echo $((command_num + 1))
}

alias golint="go install tool;gofumpt -w .;go generate ./...;pkill golangci; golangci-lint run --fix --build-tags kqueue --timeout=10m --config .golangci.yml"

function parse_git_branch() {
  git_branch=$(git branch 2> /dev/null --show-current)
  if [ $? -eq 0 ]; then
    echo "$git_branch"
  else
    echo ""
  fi
}

tmux_session_name() {
    if [ -n "$TMUX" ]; then
       echo $(tmux display-message -p '#S')
    fi
}
#export PS1='\n \033[0m$(whoami) [\033[32m$(tmux_session_name)\033[0m] \033[35m${PWD} \033[36m$(parse_git_branch)\033[0m \n '
# export PS1='\n\033[0m$(whoami) \033[34mðŸ’€ \033[32m$(tmux_session_name)\033[34m ðŸ’€ \033[0m${PWD}/\033[34m$(parse_git_branch)\033[0m '
export PS1='\n\033[0m$(whoami) \033[32m$(tmux_session_name) \033[0m${PWD}/\033[34m$(parse_git_branch)\033[0m '


shist(){
	history | grep $1
}
sps(){
	ps aux | grep $1
}

alias r="source /home/sveinn/code/dotfiles/.brc"
alias rr="reset"
alias c="clear"
alias e="exit"
alias .="cd .."
alias ..="cd ..;cd .."
alias ...="cd ..;cd ..;cd .."
alias ....="cd ..;cd ..;cd ..;cd .."
alias .....="cd ..;cd ..;cd ..;cd ..;cd .."
alias ......="cd ..;cd ..;cd ..;cd ..;cd ..;cd .."
alias ls="eza --total-size -l -b --git -a -u -m  -h"
lss(){
    ls | grep "$1"
}
alias ns="netstat -tulpn"

alias ipt="sudo iptables $1"
alias ipta="sudo iptables -L --line-numbers -n"


setup-iptables(){
 sudo iptables -F
 sudo iptables -X
 sudo iptables -t nat -F
 sudo iptables -t mangle -F


 sudo iptables -A INPUT -m conntrack --ctstate ESTABLISHED,RELATED -j ACCEPT
 sudo iptables -A INPUT --src 127.0.0.1 --dst 127.0.0.1 -j ACCEPT

 sudo iptables -P INPUT DROP
 sudo iptables -P FORWARD DROP
 sudo iptables -P OUTPUT ACCEPT

 # allow ssh from main pc
 sudo iptables -A INPUT --src 192.168.1.19 -p tcp --dport 22 -j ACCEPT
 sudo iptables -A INPUT --src 192.168.1.19 -p tcp --dport 445 -j ACCEPT
 sudo iptables-save >> /etc/iptables/iptables.rules 
}

gx-pr() {
	git fetch origin pull/$1/head:pr-$1
	git checkout pr-$1
}

gx-sync(){
	cd ~/code/$1
	git pull
	git push fork
	cd ~/code/$1-fork
	git pull
}

alias gx-clone='gClone'
gClone() {
  git clone git@github.com:$1
}

alias gx-new-branch="gBranch"
gBranch(){
	git branch $1
	git checkout $1
}


setup-repos(){
 git config --global --add url."git@github.com:".insteadOf "https://github.com/"

 git config --global user.name zveinn
 git config --global user.email info@sveinn.is
	
 mkdir -p ~/code
 cd ~/code
 git clone git@github.com:minio/mc mc
 git clone git@github.com:minio/madmin-go madmin-go
 git clone git@github.com:minio/minio minio
 git clone git@github.com:miniohq/eos eos
 git clone git@github.com:miniohq/ec ec

 git clone git@github.com:zveinn/mc mc-fork
 git clone git@github.com:zveinn/madmin-go madmin-go-fork
 git clone git@github.com:zveinn/minio minio-fork
 git clone git@github.com:zveinn/eos eos-fork
 git clone git@github.com:zveinn/ec ec-fork

 git clone git@github.com:zveinn/tools
 git clone git@github.com:zveinn/github-feek
 git clone git@github.com:zveinn/hdnfs
 git clone git@github.com:zveinn/parser
 git clone git@github.com:zveinn/dplz

 git clone git@github.com:tunnels-is/tunnels
 git clone git@github.com:tunnels-is/devops
 git clone git@github.com:tunnels-is/web
 git clone git@github.com:tunnels-is/docs

 git clone git@github.com:n00bady/bluam

 cd ~/code/ec
 git remote add fork git@github.com:zveinn/ec
 cd ~/code/mc
 git remote add fork git@github.com:zveinn/mc
 cd ~/code/madmin-go
 git remote add fork git@github.com:zveinn/madmin-go
 cd ~/code/minio
 git remote add fork git@github.com:zveinn/minio
 cd ~/code/eos
 git remote add fork git@github.com:zveinn/eos

}

setup-golang() {
	wget https://go.dev/dl/go1.25.3.linux-amd64.tar.gz
	rm -rf /usr/local/go && tar -C /usr/local -xzf go1.25.3.linux-amd64.tar.gz
	rm go1.25.3.linux-amd64.tar.gz
	go install github.com/nametake/golangci-lint-langserver@latest
	go install golang.org/x/tools/gopls@latest
  go install github.com/golangci/golangci-lint/cmd/golangci-lint@latest
 	go install golang.org/x/tools/cmd/goimports@latest
  go install github.com/go-delve/delve/cmd/dlv@latest
  go install github.com/jesseduffield/lazygit@latest
  go install github.com/tinylib/msgp@latest
  go install golang.org/x/tools/cmd/stringer@latest
}

setup-non-root() {
 	sudo pacman -S git htop wget curl xclip tmux podman net-utils bind eza -y
  curl -o- https://raw.githubusercontent.com/nvm-sh/nvm/v0.39.2/install.sh | bash
 	curl -fsSL https://get.pnpm.io/install.sh | sh -
	pnpm install -g typescript-language-server typescript

	ln -s ~/code/dotfiles/helix ~/.config/helix	
	ln -s ~/code/dotfiles/.tmux.conf ~/.config/tmux/.tmux.conf
	rm ~/.bashrc
 	ln -s ~/code/dotfiles/.brc ~/.bashrc

 	mkdir -p ~/code/
 	cd ~/code

 	git clone https://aur.archlinux.org/yay.git
 	makepgk -si
}


# SYSTEM 76: https://support.system76.com/articles/system76-driver/
# COSMIC: git@github.com:zveinn/cosmic
setup-root(){
 systemctl disable systemd-resolved
 systemctl stop systemd-resolved
 systemctl mask systemd-resolved
 sysctl -w net.ipv6.conf.all.disable_ipv6=1
 sysctl -w net.ipv6.conf.default.disable_ipv6=1
 sydo sysctl -p
 systemctl enable iptables
}


alias tn="tmux new -s $1"
alias tr="tmux source /home/sveinn/code/dotfiles/.tmux.conf"
alias td="tmux detach"
alias ta="tmux attach -d -t $1"
alias tl="tmux ls"
alias tnw="tmux new-window;tmux rename-window $1"
alias ts="tmux switch -t $1"
alias tmoveleft="tmux swap-window -t 0"

alias h="helix -c ~/code/dotfiles/helix/config.toml"

sync-helix(){
	ln -s ~/.config/dotfiles/helix ~/.config/helix	
}

alias gaa="git add --all"
alias gca="git commit -am $1"
alias gpush="git push"
alias gpull="git push"
alias gs="git status"
alias gl="git log"

alias l="lazygit"

alias d='podman'
alias ds='podman start'
alias dst='podman stop'
alias dr='podman run'
alias drm='podman remove'
alias dps='podman ps --all'
alias dpsa='podman ps --all'
alias di='podman images'
alias drmi='podman rmi'
alias dl='podman logs'

dex(){
	podman exec -ti "$1" bash
}

# alias k="kubectl"
# alias kg="kubectl get"
# alias ks="kubectl get pod,svc -n kube-system"
# ka(){
# 	echo "KIND NETWORK"
# 	docker network inspect -f '{{.IPAM.Config}}' kind
# 	echo "NODES"
# 	echo "=============================================================="
# 	echo ""
# 	kubectl get nodes
# 	echo "=============================================================="
# 	echo ""
# 	echo "PODS/SERVICES >>> NAMESPACE: kube-system"
# 	echo "=============================================================="
# 	kubectl get pod,svc -n kube-system
# 	echo "=============================================================="
# 	echo ""
# 	echo "PODS/SERVICES >>> NAMESPACE: default"
# 	echo "=============================================================="
# 	kubectl get pod,svc -n default
# 	echo "=============================================================="
# 	echo ""
# 	echo "PODS/SERVICES >>> NAMESPACE: minio-operator"
# 	echo "=============================================================="
# 	kubectl get pod,svc -n minio-operator
# 	echo "=============================================================="
# }
#

shopt -s expand_aliases

export NVM_DIR="$HOME/.nvm"
[ -s "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh"  # This loads nvm
[ -s "$NVM_DIR/bash_completion" ] && \. "$NVM_DIR/bash_completion"  # This loads nvm bash_completion

# pnpm
export PNPM_HOME="/home/sveinn/.local/share/pnpm"
case ":$PATH:" in
  *":$PNPM_HOME:"*) ;;
  *) export PATH="$PNPM_HOME:$PATH" ;;
esac

export EZA_COLORS="\
di=38;5;67:\
fi=97:\
ln=38;5;45:\
ex=38;5;44:\
sn=38;5;73:\
pi=38;5;73:\
bd=38;5;67:\
cd=38;5;67:\
or=38;5;203:\
*.md=38;5;117:\
*.jpg=38;5;45:\
*.png=38;5;45:\
*.log=38;5;146:\
*.txt=97:\
*.conf=38;5;44:\
*.json=38;5;44:\
*.go=38;5;117:\
ur=38;5;45:\
uw=38;5;45:\
ux=38;5;45:\
ue=38;5;45:\
gr=38;5;67:\
gw=38;5;67:\
gx=38;5;67:\
da=97:\
sz=97:\
us=97:\
gr=38;5;67:\
in=38;5;146:\
ga=38;5;44:\
gm=38;5;117:\
gd=38;5;203:\
gi=38;5;73:\
xx=38;5;67"
