#!/bin/bash

export PATH=$PATH:/usr/local/go/bin:~/go/bin:/home/sveinn/hx
export GOPATH=~/go
export COLORTERM=truecolor
source "$HOME/.cargo/env"
bind '"\C-r":reverse-search-history'

function parse_git_branch() {
  git_branch=$(git branch 2> /dev/null --show-current)
  if [ $? -eq 0 ]; then
    echo "$git_branch"
  else
    echo ""
  fi
}

function get_command_number() {
	command_num=$(history | tail -n 1 | awk '{print $1}')
  echo $((command_num + 1))
}


# pnpm
export PNPM_HOME="/home/sveinn/.local/share/pnpm"
case ":$PATH:" in
  *":$PNPM_HOME:"*) ;;
  *) export PATH="$PNPM_HOME:$PATH" ;;
esac
# pnpm end
#

alias golint="golangci-lint run --build-tags kqueue --timeout=10m --config .golangci.yml"

export PS1='\n \033[0m$(whoami) \033[35m${PWD} \033[36m$(parse_git_branch)\033[0m\n  '
#export PS1='\033[0m$(whoami) \033[35m${PWD} \033[36m$(parse_git_branch)\033[0m '

alias web="ssh -i /home/sveinn/.ssh/1984 root@195.246.231.55"
alias web-update="scp -r -i /home/sveinn/.ssh/1984 /home/sveinn/code/website/dist/* root@195.246.231.55:/var/www/web"

shopt -s expand_aliases
alias s="history | grep $1"
alias r="source ~/.bashrc"
alias rr="reset"
alias c="clear"
alias e="exit"
alias ..="cd .."
alias ...="cd ..;cd .."
alias ....="cd ..;cd ..;cd .."
alias .....="cd ..;cd ..;cd ..;cd .."
alias ......="cd ..;cd ..;cd ..;cd ..;cd .."
alias ls="ls -laF --color=auto"
alias lsh="ls -lahF --color=auto"
lss(){
    if [ -z "$1" ]; then
        echo "Error: Please provide a directory path"
        return 1
    fi
    if [ -z "$2" ]; then
        echo "Error: Please provide a search pattern"
        return 1
    fi
    if [ ! -d "$1" ]; then
        echo "Error: '$1' is not a valid directory"
        return 1
    fi
    ls "$1" | grep "$2"
}
alias ns="netstat -tulpn"

alias ipt="sudo iptables $1"
alias ipta="sudo iptables -L --line-numbers -n"

backup-kde(){
	cp ~/.config/plasma-org.kde.plasma.desktop-appletsrc ~/.config/dotfiles/kde-backups
 	cp ~/.config/plasmashellrc ~/.config/dotfiles/kde-backups
	cp ~/.config/kwinrc ~/.config/dotfiles/kde-backups
	cp ~/.config/kdeglobals ~/.config/dotfiles/kde-backups
  cp ~/.config/dolphinrc ~/.config/dotfiles/kde-backups		
  cp ~/.config/kglobalshortcutsrc ~/.config/dotfiles/kde-backups		
}

setup-iptables(){
 sudo iptables -F
 sudo iptables -X
 sudo iptables -t nat -F
 sudo iptables -t mangle -F

 sudo iptables -P INPUT DROP
 sudo iptables -P FORWARD DROP
 sudo iptables -P OUTPUT ACCEPT

 sudo iptables -A INPUT -m conntrack --ctstate ESTABLISHED,RELATED -j ACCEPT
 sudo iptables -A INPUT --src 127.0.0.1 --dst 127.0.0.1 -j ACCEPT
 # iptables -A INPUT --src 0.0.0.0 -dport 22 -J ACCEPT
 sudo iptables-save >> /etc/iptables/iptables.rules 
}

clone-pr() {
	git fetch origin pull/$1/head:pr-$1
	git checkout pr-$1
}

sync-fork(){
	cd ~/code/$1
	git pull
	git push fork
	cd ~/code/$1-fork
	git pull
}

setup-repos(){
 git config --global --add url."git@github.com:".insteadOf "https://github.com/"

 git config --global user.name zveinn
 git config --global user.email info@sveinn.is
	
 mkdir -p ~/code
 cd ~/code
 git clone git@github.com:minio/mc mc
 git clone git@github.com:minio/madmin-go madmin-go
 git clone git@github.com:minio/minio minio
 git clone git@github.com:miniohq/eos eos
 git clone git@github.com:miniohq/ec ec

 git clone git@github.com:zveinn/mc mc-fork
 git clone git@github.com:zveinn/madmin-go madmin-go-fork
 git clone git@github.com:zveinn/minio minio-fork
 git clone git@github.com:zveinn/eos eos-fork
 git clone git@github.com:zveinn/ec ec-fork

 git clone git@github.com:tunnels-is/tunnels
 git clone git@github.com:tunnels-is/monorepo
 git clone git@github.com:tunnels-is/devops
 git clone git@github.com:n00bady/bluam

 cd ~/code/ec
 git remote add fork git@github.com:zveinn/ec
 cd ~/code/mc
 git remote add fork git@github.com:zveinn/mc
 cd ~/code/madmin-go
 git remote add fork git@github.com:zveinn/madmin-go
 cd ~/code/minio
 git remote add fork git@github.com:zveinn/minio
 cd ~/code/eos
 git remote add fork git@github.com:zveinn/eos

}

setup-golang() {
	wget https://go.dev/dl/go1.24.1.linux-amd64.tar.gz
	rm -rf /usr/local/go && tar -C /usr/local -xzf go1.24.1.linux-amd64.tar.gz
	rm go1.24.1.linux-amd64.tar.gz
	go install github.com/nametake/golangci-lint-langserver@latest
	go install golang.org/x/tools/gopls@latest
  go install github.com/golangci/golangci-lint/cmd/golangci-lint@latest
 	go install golang.org/x/tools/cmd/goimports@latest
  go install github.com/go-delve/delve/cmd/dlv@latest
  go install github.com/jesseduffield/lazygit@latest
  go install github.com/tinylib/msgp@latest
  go install golang.org/x/tools/cmd/stringer@latest
}

setup-non-root() {
 	sudo apt install git htop wget curl xclip nodejs tmux podman -y
 	curl -fsSL https://get.pnpm.io/install.sh | sh -
	pnpm install -g typescript-language-server typescript

	ln -s ~/.config/dotfiles/helix ~/.config/helix	
	ln -s ~/.config/dotfiles/.wezterm.lua  ~/.wezterm.lua	
	ln -s ~/.config/dotfiles/.tmux.conf ~/.tmux.conf
	rm ~/.bashrc
 	ln -s ~/.config/dotfiles/.brc ~/.bashrc
}


setup-root(){

# apt install noto-fonts noto-fonts-cjk noto-fonts-emoji
# pacman -S $(pacman -Sgq nerd-fonts)	

 cp ./iptables-restore.service /etc/systemd/system/iptables-restore.service
 systemctl enable iptables-restore.service
 systemctl start iptables-restore.service

 cp ./sysctl.conf /etc/sysctl.conf
 sysctl -w net.ipv6.conf.all.disable_ipv6=1
 sysctl -w net.ipv6.conf.default.disable_ipv6=1
 sydo sysctl -p

 systemctl disable systemd-resolved
 systemctl stop systemd-resolved
 systemctl disable avahi-daemon
 systemctl stop avahai-daemon
 systemctl disable cups
 systemctl stop cups
 pkill kdeconnect
 pkill kdeconnectd
 apt remove cups kdeconnect systemd-resolved avahi-daemon
}


alias tn="tmux new -s $1"
alias tr="tmux source ~/.tmux.conf"
alias td="tmux detach"
alias ta="tmux attach -d -t $1"
alias tl="tmux ls"
alias tnw="tmux new-window;tmux rename-window $1"
alias ts="tmux switch -t $1"
alias tsc="tmux switch -t config"
alias tst="tmux switch -t tunnels"
alias tsm="tmux switch -t monorepo"
alias tse="tmux switch -t eos"
alias tsd="tmux switch -t dplz"
alias tsb="tmux switch -t bluam"
alias tsmc="tmux switch -t mc"
alias tmoveleft="tmux swap-window -t 0"


alias h="hx -c ~/.config/dotfiles/helix/config.toml"
alias hh="hx -c ~/.config/dotfiles/helix/config.toml ."
alias hc="h ~/.config/dotfiles"
alias hm="h ~/code/monorepo"
alias htunnels="v ~/code/tunnels"

sync-helix(){
	ln -s ~/.config/dotfiles/helix ~/.config/helix	
}

alias cdc="cd ~/.config/dotfiles"
alias cdm="cd ~/code/monorepo"
alias cdt="cd ~/code/tunnels"
alias cdssh="cd ~/.ssh"
alias cdgo="cd ~/code/"

alias gaa="git add --all"
alias gca="git commit -am $1"
alias gpush="git push"
alias gpull="git push"
alias gs="git status"
alias gl="git log"

alias gc='gClone'
gClone() {
  git clone git@github.com:$1
}

alias gb="gBranch"
gBranch(){
	git branch $1
	git checkout $1
}

# alias grs="gh repo sync $1 -b master"
alias grs="syncRepo"
syncRepo() {
	gh repo sync "$1" -b "master"
	echo "do not forget to git pull"
}


alias l="lazygit"

alias d='podman'
alias ds='podman start'
alias dst='podman stop'
alias dr='podman run'
alias drm='podman remove'
alias dps='podman ps --all'
alias dpsa='podman ps --all'
alias di='podman images'
alias drmi='podman rmi'
alias dl='podman logs'

dex(){
	podman exec -ti "$1" bash
}

# alias k="kubectl"
# alias kg="kubectl get"
# alias ks="kubectl get pod,svc -n kube-system"
# ka(){
# 	echo "KIND NETWORK"
# 	docker network inspect -f '{{.IPAM.Config}}' kind
# 	echo "NODES"
# 	echo "=============================================================="
# 	echo ""
# 	kubectl get nodes
# 	echo "=============================================================="
# 	echo ""
# 	echo "PODS/SERVICES >>> NAMESPACE: kube-system"
# 	echo "=============================================================="
# 	kubectl get pod,svc -n kube-system
# 	echo "=============================================================="
# 	echo ""
# 	echo "PODS/SERVICES >>> NAMESPACE: default"
# 	echo "=============================================================="
# 	kubectl get pod,svc -n default
# 	echo "=============================================================="
# 	echo ""
# 	echo "PODS/SERVICES >>> NAMESPACE: minio-operator"
# 	echo "=============================================================="
# 	kubectl get pod,svc -n minio-operator
# 	echo "=============================================================="
# }
#


